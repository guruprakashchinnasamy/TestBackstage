openapi: 3.0.1
info:
  title: Inventory API
  version: '1.10'
paths:
  /api/Products:
    get:
      tags:
        - Products
      parameters:
        - name: inStock
          in: query
          schema:
            type: boolean
        - name: skip
          in: query
          schema:
            type: integer
            format: int32
        - name: take
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'
    post:
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
          text/json:
            schema:
              $ref: '#/components/schemas/Products'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Products'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Products'
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
            text/json:
              schema:
                $ref: '#/components/schemas/Products'
  '/api/Products/{id}':
    get:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Products'
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
            text/json:
              schema:
                $ref: '#/components/schemas/Products'
    put:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
          text/json:
            schema:
              $ref: '#/components/schemas/Products'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Products'
      responses:
        '200':
          description: Success
components:
  schemas:
    Products:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        availableQuantity:
          type: integer
          format: int32
      additionalProperties: false
